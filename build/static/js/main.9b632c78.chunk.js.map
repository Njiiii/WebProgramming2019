{"version":3,"sources":["index.js"],"names":["App","props","_this","Object","C_Users_Niko_Webohjelmointi_part3_frontend_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_Niko_Webohjelmointi_part3_frontend_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Niko_Webohjelmointi_part3_frontend_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","addPerson","event","preventDefault","nameObject","name","state","newName","number","newNumber","id","persons","length","axios","post","then","response","setState","concat","handleNameChange","target","value","handleNumberChange","deletePerson","window","confirm","fetch","method","json","catch","error","console","log","bind","C_Users_Niko_Webohjelmointi_part3_frontend_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","_this2","get","data","_this3","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","onSubmit","onChange","type","map","key","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"wOAMMA,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAoBRQ,UAAY,SAACC,GACXA,EAAMC,iBAGN,IAAMC,EAAa,CACfC,KAAMX,EAAKY,MAAMC,QACjBC,OAAQd,EAAKY,MAAMG,UACnBC,GAAIhB,EAAKY,MAAMK,QAAQC,QAI3BC,IACGC,KAAK,oCAAqCV,GAC1CW,KAAK,SAAAC,GACJtB,EAAKuB,SAAS,CACZN,QAASjB,EAAKY,MAAMK,QAAQO,OAAOd,GACnCG,QAAS,GACTE,UAAW,QAtCAf,EA8CnByB,iBAAmB,SAACjB,GAEhBR,EAAKuB,SAAS,CAACV,QAASL,EAAMkB,OAAOC,SAhDtB3B,EAoDnB4B,mBAAqB,SAACpB,GACpBR,EAAKuB,SAAS,CAACR,UAAWP,EAAMkB,OAAOC,SArDtB3B,EA0DnB6B,aAAe,SAACb,GACd,IAAML,EAAOX,EAAKY,MAAMK,QAAQD,EAAK,GAAGL,KACxC,OAAM,WACDmB,OAAOC,QAAQ,2BAA0BpB,EAAO,OACjDqB,MAAM,oCAAsChB,EAAI,CAC9CiB,OAAQ,WAETZ,KAAK,SAAAC,GAAQ,OAAIA,EAASY,SAC1BC,MAAM,SAAAC,GAAK,OAAIA,IAChBC,QAAQC,IAAI,UAAY3B,EAAO,eAjEnCX,EAAK6B,aAAe7B,EAAK6B,aAAaU,KAAlBtC,OAAAuC,EAAA,EAAAvC,QAAAuC,EAAA,EAAAvC,CAAAD,KACpBA,EAAKY,MAAQ,CACXK,QAAS,GACTJ,QAAS,GACTE,UAAW,IANIf,mFAUA,IAAAyC,EAAAtC,KACjBkC,QAAQC,IAAI,aACZnB,IACGuB,IAAI,qCACJrB,KAAK,SAAAC,GACJe,QAAQC,IAAI,qBACZG,EAAKlB,SAAS,CAACN,QAASK,EAASqB,0CAwD9B,IAAAC,EAAAzC,KAgBP,OACI0C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,6BAIAF,EAAAC,EAAAC,cAAA,QAAMC,SAAU7C,KAAKI,WACjBsC,EAAAC,EAAAC,cAAA,oBACUF,EAAAC,EAAAC,cAAA,SAAOpB,MAAOxB,KAAKS,MAAMC,QAASoC,SAAU9C,KAAKsB,oBAG3DoB,EAAAC,EAAAC,cAAA,sBACUF,EAAAC,EAAAC,cAAA,SAAOpB,MAAOxB,KAAKS,MAAMG,UAAWkC,SAAU9C,KAAKyB,sBAG7DiB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQG,KAAK,UAAb,iBAKRL,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,qBApCYH,EAAKhC,MAAMK,QAAQkC,IAAI,SAAAxC,GAAI,OAC/CkC,EAAAC,EAAAC,cAAA,KAAGK,IAAKzC,EAAKK,IAEVL,EAAKA,KAFR,KAEgBA,EAAKG,OAEnB+B,EAAAC,EAAAC,cAAA,UAAQM,QAAST,EAAKf,aAAalB,EAAKK,KAAxC,sBAhFUsC,IAAMC,WA2HxBC,IAASC,OACLZ,EAAAC,EAAAC,cAACjD,EAAD,MACA4D,SAASC,eAAe","file":"static/js/main.9b632c78.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios'\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.deletePerson = this.deletePerson.bind(this)\n    this.state = {\n      persons: [],\n      newName: '',\n      newNumber: ''\n    }\n  }\n\n  componentDidMount(){\n    console.log('did mount')\n    axios\n      .get('http://localhost:3001/api/persons')\n      .then(response => {\n        console.log('promise fulfilled')\n        this.setState({persons: response.data})\n      })\n  }\n\n  //Tämä metodi lisää uuden henkilön nimen ja numeron 'persons' -listaan.\n  addPerson = (event) => {\n    event.preventDefault()    \n    \n    //nameObject on tietokantaan lisättävä nimi, name arvo otetaan newNamesta, number arvo otetaan newNumberista ja id on 'persons' -listan pituus.\n    const nameObject = {\n        name: this.state.newName,\n        number: this.state.newNumber,\n        id: this.state.persons.length\n    }\n\n    //Lisätään nameObject tietokantaan\n    axios\n      .post('http://localhost:3001/api/persons', nameObject)\n      .then(response => {\n        this.setState({\n          persons: this.state.persons.concat(nameObject),\n          newName: '',\n          newNumber: ''\n        })\n      })\n  }\n  \n\n  //handeNameChange -metodi toimii eventhandlerina tekstilaatikolle, johon kirjoitetaan haluttu nimi.\n  //Ilman tätä tekstilaatikkoon ei voida kirjoittaa mitään.\n  handleNameChange = (event) => {\n      //console.log(event.target.value)\n      this.setState({newName: event.target.value})\n  }\n\n  //handleNumberChange on sama kuin handleNameChange, mutta puhelinnumerolle tarkoitetulle tekstikentälle.\n  handleNumberChange = (event) => {\n    this.setState({newNumber: event.target.value})\n  }\n\n\n  //Poistetaan henkilö id:n perusteella. \n  deletePerson = (id) => {\n    const name = this.state.persons[id - 1].name\n    return() => {\n      if(window.confirm('Poistetaanko henkilö ' + name + '?')){ //Varmisetetaan käyttäjältä haluaako hän varmasti poistaa kyseisen henkilön\n        fetch('http://localhost:3001/api/persons' + id, {\n          method: 'DELETE'\n        })\n        .then(response => response.json())\n        .catch(error => error)\n        console.log('person ' + name + ' deleted')\n      }\n    }\n  }\n\n  render() { \n\n    const persons = () => this.state.persons.map(name => \n      <p key={name.id}>\n        \n        {name.name}: {name.number}   \n        \n        <button onClick={this.deletePerson(name.id)}>\n          Poista \n        </button>\n\n      </p>)\n\n      \n\n\n    return (\n        <div>\n            <h2>\n                Puhelinluettelo\n            </h2>\n\n            <form onSubmit={this.addPerson}>\n                <div>\n                    Nimi: <input value={this.state.newName} onChange={this.handleNameChange} />\n                </div>\n\n                <div>\n                  Numero: <input value={this.state.newNumber} onChange={this.handleNumberChange} />\n                </div>\n\n                <div>\n                    <button type=\"submit\">\n                        Lisää\n                    </button>\n                </div>\n            </form>\n            <form>\n              <h2>\n                  Numerot\n              </h2>\n              {persons()}\n            </form>\n        </div>  \n    )\n  }\n}\n\n\n//ÄLÄ POISTA!!!\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n  )\n\n\n"],"sourceRoot":""}